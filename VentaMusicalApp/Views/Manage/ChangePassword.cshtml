@model VentaMusicalApp.Models.ChangePasswordViewModel
@{
    ViewBag.Title = "Change Password";
}

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("ChangePassword", "Manage", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()
    <h4>Change Password Form</h4>
    <hr />
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.NumeroIdentificacion, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.NumeroIdentificacion, new { @class = "form-control", @id = "numeroIdentificacion" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PrimerNombre, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PrimerNombre, new { @class = "form-control" })
        </div>
    </div><div class="form-group">
        @Html.LabelFor(m => m.SegundoNombre, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.SegundoNombre, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.PrimerApellido, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.PrimerApellido, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.SegundoApellido, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.SegundoApellido, new { @class = "form-control" })
        </div>
    </div>
    @Html.LabelFor(u => u.Genero, new { @class = "label-form" })
    @Html.DropDownList(
    "Genero",
    (List<SelectListItem>)ViewBag.Generos,
    "Elige un género",
    new { @class = "select-input-form" })
    @Html.ValidationMessageFor(u => u.Genero)
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        </div>
    </div>

    @Html.LabelFor(u => u.IdTipoTarjeta, new { @class = "label-form" })
    @Html.DropDownList(
    "IdTipoTarjeta",
    (List<SelectListItem>)ViewBag.TipoTarjeta,
    "Elige un tipo de tarjeta",
    new { @class = "select-input-form" })
    @Html.ValidationMessageFor(u => u.IdTipoTarjeta)

    <div class="form-group">
        @Html.LabelFor(m => m.NumeroTarjeta, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.NumeroTarjeta, new { @class = "form-control", @id = "numeroTarjeta" })
        </div>
    </div>

    @Html.LabelFor(u => u.Rol, new { @class = "label-form" })
    @Html.DropDownList(
    "Rol",
    (List<SelectListItem>)ViewBag.Roles,
    "Elige un rol",
    new { @class = "select-input-form" })
    @Html.ValidationMessageFor(u => u.Rol)
    @Html.ValidationSummary("", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(m => m.OldPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.OldPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.NewPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.NewPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Change password" class="btn btn-default" />
        </div>
    </div>
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}